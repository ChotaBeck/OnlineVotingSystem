@model OnlineVotingSystem.Models.Voter
@using System
@using System.IO
@using OnlineVotingSystem.Data
@using OpenCvSharp;
    

@{
    ViewData["Title"] = "Verify Face";
}

<div class="text-center">
    
    <h2>@ViewData["Title"]</h2>
    <h2>Welcome @Model.FirstName please verify your identity with your face</h2>


@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}



    <video id="video" autoplay></video>
    <button id="capture">Capture Image</button>
    <canvas id="canvas" style="display: none;"></canvas>

    <script>
        var video = document.getElementById('video');
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(function (stream) {
                video.srcObject = stream;
                video.play();
            })
            .catch(function (error) {
                console.error('Error accessing webcam:', error);
            });

        $('#capture').on('click', function () {
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;

            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            var imageData = canvas.toDataURL('image/jpeg');

            // Send the imageData to the server for processing using an AJAX request
            $.ajax({
                url: '@Url.Action("CaptureImage", "Vote")',  // Replace with your actual URL
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ imageData: imageData }),
                success: function (result) {
                    if (result.success) {
                        console.log('Image captured and sent successfully.');
                    } else {
                        console.error('Error capturing and sending image.');
                    }
                }
            });
        });
    </script>




    @* <div class="container">
        <video autoplay="true" id="videoElement"></video>
    </div>


    <script>
        // Get the video element
        const video = document.getElementById('videoElement');

        // Check if the browser supports getUserMedia
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Access the user's camera
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(function (stream) {
                    // Set the video source to the camera stream
                    video.srcObject = stream;
                })
                .catch(function (error) {
                    console.error('Error accessing camera:', error);
                });
        } else {
            console.error('getUserMedia is not supported in this browser.');
        }
    </script>
         *@
</div>
